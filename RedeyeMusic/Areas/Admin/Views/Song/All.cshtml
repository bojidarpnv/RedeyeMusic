@using RedeyeMusic.Services.Data.Interfaces;
@using RedeyeMusic.Web.Infrastrucutre.Extensions;
@using RedeyeMusic.Web.ViewModels.Playlist;
@model IEnumerable<IndexViewModel>
@inject IArtistService ArtistService;
@inject IPlaylistService PlaylistSerivce;
@{
    var addToPlaylistViewModel = new AddToPlaylistViewModel();
    ViewData["Title"] = "Home Page";
    var songs = Model.ToList();
    var popularSongs = Model.OrderByDescending(s => s.ListenCount).ToList();
    bool isArtist = await this.ArtistService.ArtistExistsByUserIdAsync(this.User.GetId());
}
@if (!songs.Any())
{
    <div class="mt-4 p-5 bg-light">
        <h1 class="display-4">Top Songs</h1>
        <p class="lead">
            There are no songs in the system currently available
            so why don't you just add one?
        </p>
        <hr class="my-4">
        <p class="lead">
            @if (User.Identity?.IsAuthenticated ?? false)
            {
                <a asp-controller="Song" asp-action="Add" class="btn btn-primary btn-lg"
                   role="button">Add Song</a>
            }
        </p>
    </div>
}
<div class="homeview text-white pt-2">
    <ul class="homeview-nav nav m-4 nav-pills mb-3" id="pills-tab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="text-white nav-link active" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home" aria-selected="true">Popular</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="text-white nav-link" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile" aria-selected="false">Discover</button>
        </li>

    </ul>
    <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-popular" role="tabpanel" aria-labelledby="pills-popular-tab" tabindex="0">
            @for (int i = 0; i < popularSongs.Count(); i++)
            {
                var song = popularSongs[i];
                int seconds = song.Duration % 60;
                int minutes = song.Duration / 60;
                var span = new TimeSpan(0, 0, seconds);
                var durationInMinutes = string.Format("{0}:{1:00}", (int)span.TotalMinutes, span.Seconds);
                string songDuration = minutes + "+" + seconds;
                <div class="row">
                    <div class="col-md-6">
                        <div class="white song m-2 ms-4 row align-items-center song-item" data-song-id="@song.Id" data-src="@Url.Content(song.Mp3FilePath)">
                            <div class="col d-flex">
                                <img class="rounded m-1" src="@song.ImageUrl" style="width:50px;height:50px; object-fit:cover;">
                                <div class="white ms-1">
                                    <div class="white">@song.Title</div>
                                    <div class="smallText"><small class="white">@song.Lyrics</small></div>
                                </div>
                            </div>
                            <div class="col-2 text-decoration-none">@durationInMinutes<i class="bi bi-play ml-2"></i></div>
                            <small class="white col-2">
                                <i class="bi bi-ear"></i>
                                <span class="listen-count-placeholder"></span>
                            </small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="row justify-content-center pt-3 mb-2">
                            <div class="col me-lg-5">
                                <a asp-action="Details" asp-controller="Song" asp-route-id="@song.Id" class="btn btn-danger">Details</a>
                                @if (User.Identity?.IsAuthenticated ?? false)
                                {
                                    if (!isArtist || this.User.IsAdmin())
                                    {
                                        <div class="col-md-3">
                                            <div class="row justify-content-center pt-3 mb-2">
                                                <div class="col-auto">
                                                    <a asp-area="" asp-action="Details" asp-controller="Song" asp-route-id="@song.Id" class="btn btn-details">Details</a>
                                                </div>
                                                <div class="col-auto">
                                                    <a asp-area="" asp-action="Edit" asp-controller="Song" asp-route-id="@song.Id" class="btn btn-edit">Edit</a>
                                                </div>
                                                <div class="col-auto">
                                                    <a class="btn btn-danger delete-button" data-toggle="modal" data-target="#confirmDeleteModal" data-song-id="@song.Id">Delete</a>
                                                </div>
                                                <div>
                                                    <button asp-area ="" asp-action="AddToPlaylist" asp-controller="Playlist" class="btn btn-primary add-to-playlist" data-song-id="@song.Id">Add to Playlist</button>
                                                </div>
                                            </div>
                                        </div>
                                        
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div id="addToPlaylistModal-@song.Id" class="modal fade" tabindex="-1" role="dialog">
                    @await Html.PartialAsync("_AddToPlaylistModal", new AddToPlaylistViewModel
                {
                SongModel = song,
                Playlists = await this.PlaylistSerivce.GetAllPlaylistsByUserIdAsync(this.User.GetId())
                })
                </div>
            }
        </div>

        <div class="tab-pane fade" id="pills-disvoer" role="tabpanel" aria-labelledby="pills-discover-tab" tabindex="0">
            @for (int i = 0; i < songs.Count(); i++)
            {
                var song = songs[i];
                int seconds = song.Duration % 60;
                int minutes = song.Duration / 60;
                var span = new TimeSpan(0, 0, seconds);
                var durationInMinutes = string.Format("{0}:{1:00}", (int)span.TotalMinutes, span.Seconds);
                string songDuration = minutes + "+" + seconds;
                <div class="row">
                    <div class="col-md-6">
                        <div class="white song m-2 ms-4 row align-items-center song-item" data-song-id="@song.Id" data-src="@Url.Content(song.Mp3FilePath)">
                            <div class="col d-flex">
                                <img class="rounded m-1" src="@song.ImageUrl" style="width:50px;height:50px; object-fit:cover;">
                                <div class="white ms-1">
                                    <div class="white">@song.Title</div>
                                    <div class="smallText"><small class="white">@song.Lyrics</small></div>
                                </div>
                            </div>
                            <div class="col-2 text-decoration-none">@durationInMinutes<i class="bi bi-play ml-2"></i></div>
                            <small class="white col-2">
                                <i class="bi bi-ear"></i>
                                <span class="listen-count-placeholder"></span>
                            </small>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="row justify-content-center pt-3 mb-2">
                            <div class="col me-lg-5">
                                <a asp-action="Details" asp-controller="Song" asp-route-id="@song.Id" class="btn btn-danger">Details</a>
                                @if (User.Identity?.IsAuthenticated ?? false)
                                {
                                    if (!isArtist || this.User.IsAdmin())
                                    {
                                        <button asp-action="AddToPlaylist" asp-controller="Playlist" class="btn btn-primary add-to-playlist" data-song-id="@song.Id">Add to Playlist</button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div id="addToPlaylistModal-@song.Id" class="modal fade" tabindex="-1" role="dialog">
                    @await Html.PartialAsync("_AddToPlaylistModal", new AddToPlaylistViewModel
                {
                SongModel = song,
                Playlists = await this.PlaylistSerivce.GetAllPlaylistsByUserIdAsync(this.User.GetId())
                })
                </div>
            }
        </div>
    </div>



</div>
@section Scripts {
    <script src="~/js/site.js"></script></>
    <script>
        var createPlaylistUrl = '@Url.Action("Create", "Playlist")'; // Generate the URL here
    </script>
    <script src="~/js/addToPlaylist.js"></script>
    <script>getListenCount();</script>
}




